---
title: "Final Project: Voting and Polling Access"
subtitle: "Katherine Nunez"
format:
  html:
    df-print: kable
    embed-resources: true
    link-external-newwindow: true
    link-external-icon: true
editor: visual
---

# Final Project

## Introduction

As the election cycle winds down, voting and access to voting remain pertinent issues. Lawsuits, provisional ballots, and mail-in ballots continued to be processed for days to weeks after election day in both 2020 and 2024, continuing to emphasize the importance of voting. Access to physical ballot boxes in a world where mail-in ballots are often politicized is critical, especially in states that restrict mail-in ballot voting.

The process how one votes is just as important as voting itself. Access to ballots, ballot boxes, and voting locations is critical to the democratic process. There are a multitude of factors that impact oneâ€™s ability to access the ballot box, including legislation, voting access amendments, and [even weather on the day of the election](https://www.nytimes.com/2024/10/26/weather/election-day-weather.html){target='_blank'}. One that we will hone in on today is polling locations - or where voters can, in person, cast their vote.

Voting centers have been a source of both positive -- and negative -- press recently, especially in the 2020 and 2024 elections. Write-in ballots have become increasingly popular, especially for [folks with disabilities](https://www.americanprogress.org/article/enhancing-accessibility-u-s-elections/){target='_blank'}. Additionally, the number of voting locations [has, overall, decreased](https://www.route-fifty.com/management/2024/03/there-are-100000-fewer-election-day-polling-places-2024/394959/){target='_blank'}, likely as a result of political violence surrounding voting. Even [schools in Arizona](https://www.washingtonpost.com/politics/2024/08/05/arizona-maricopa-county-schools-elections/){target='_blank'} asked not to be polling locations in 2024 to protect students, faculty, and infrastructure from political violence. 

All of this leads to this project, where I will examine the District of Columbia's polling locations and do a cursory analysis of their alignment with population centers in DC. This could lead to additional analysis and hypothesis testing, indicating where additional polling locations should be placed for upcoming elections in 2026 or 2028.

## Beginning the Setup

First, I'll initialize the packages that I'll need for this project, below:

```{r}
#! label: initialize-packages
set.seed(6805)
cb_palette <- c(
  "#E69F00", "#56B4E9", "#009E73", "#F0E442","#0072B2", "#D55E00", "#CC79A7"
)
library(tidyverse) |> suppressPackageStartupMessages()
library(sf) |> suppressPackageStartupMessages()
library(mapview) |> suppressPackageStartupMessages()
library(spatstat) |> suppressPackageStartupMessages()
library(concaveman) |> suppressPackageStartupMessages()
```

Let's begin by loading our data from Open Data DC, which holds so much information! I focused on polling locations for this project, but there is so much to dive into here (thank you, DC!).

The datasets can general be found here: https://datahub-dc-dcgis.hub.arcgis.com/search?collection=Dataset 

And my particular pull for DC Voting locations can be found here: https://opendata.dc.gov/datasets/DCGIS::election-day-vote-center/explore?location=38.904146%2C-77.009213%2C10.75


```{r}
#| label: load-data
voting_df <- read_csv("countypres_2000-2020.csv", show_col_types = FALSE)
voting_df |> head()
```

I also pulled data for Virginia, but I found that much harder to work with (no thank you, Virginia!), so I opted to stick with DC for this project. Expanded research into Virginia, Maryland, and around the country would certainly be a great next step for this project.

Here, I load the voting locations in DC:

```{r}
#| label: load-data
dc_voting_locations <- st_read("Election_Day_Vote_Center.shp")
st_crs(dc_voting_locations) <- 3857
dc_voting_locations <- st_transform(dc_voting_locations, 4326)
mapview(dc_voting_locations)
```

To make sure this is right, I need to project this onto a map of DC - which will require some brief configuring. I need to ensure my transformations and crs codes are correct both for this dataset and for future projections I need to do. This took a lot of trial and error!

```{r}
#! label: project-map
dc_voting_locations <- st_read("Election_Day_Vote_Center.csv")
sf_data <- st_as_sf(dc_voting_locations, coords = c("X", "Y"), crs = 26985)
sf_data <- st_transform(sf_data, crs = 4326)
mapview(sf_data)
```

Success! That data looks great. 

At first glance, there are a few things that are worth pointing out here. There appear to be three "holes" in polling locations: two in northeast DC and one in Anacostia. Regional knowledge tells me that the Anacostia "hole" is Joint Base Anacostia-Bolling, a military base. A lack of polling locations here is not surprising, but not knowing much about the other "holes," those did surprise me. Taking a look at the map of DC, there are two locations that could explain these "holes": the US National Arboretum and the AFRH-Washington Golf Course (right beside Catholic University). Perhaps these green areas explain some of the lack of polling locations. 

I will now continue to analyze these locations and eventually conduct hypothesis testing to better understand the spatial makeup of these points. My analysis is below!

## Beginning my Analysis

Now that I have the polling locations, I'm going to start with some initial visualizations of this data. To do this, I first need to load the US Census Bureau shapefiles for the District of Columbia so that I can assign coordinate points to the county data I have here.

```{r}
#| label: Census-map
county_shapefile <- st_read("./Census_Tracts_in_2020/Census_Tracts_in_2020.shp")
DC_Map <- mapview(county_shapefile)
DC_Map
```

Below, I overlay the DC shapefile with the voting locations.

```{r}
#| label: Census+polls
DC_Voting <- mapview(sf_data)
DC_Voting + DC_Map
```

Now we can start doing some spatial analysis on those findings, beginning with an initial visualization of a heat map of the voting locations.

```{r}
#| label: heat-map
sf_data_projected <- st_transform(sf_data, crs = 32618)

coords <- st_coordinates(sf_data_projected) 
window <- as.owin(st_bbox(sf_data_projected)) 

ppp_data <- ppp(x = coords[, 1], y = coords[, 2], window = window)

summary(ppp_data)

bw <- bw.diggle(ppp_data) 
int_cases <- density(ppp_data, sigma = bw, eps = 10)  

plot(int_cases, main = "Spatial Density of Cases")
```

Great! Now we can see with this heat map what we were initially guessing at above: where there are more and less polling locations throughout DC. As discussed above, it appears like there are three primary "holes" in voting locations, with an additional lack of polling locations up north of Georgetown in what is likely Rock Creek Park. As with Joint-Base Anacostia-Bolling, this makes sense - there are no houses in Rock Creek Park, so no need to have multiple voting locations there. Why the voting locations appear to be clustered in the middle, however, I'm not sure - let's continue the analysis!

## Like in class - Testing Hyptotheses

Looking at this initial heat map, the points do appear clustered near the middle of Washington, DC and in some sporadic outlying areas. Given this, as we did in the homework, I would hypothesize that there are some additional factors that influence this goegraphy through the form of latent first-order processes. Two hypotheses would be as follows:

* First-order hypothesis: Polling locations are placed in spots with strong "infrastructure" and high populations, leading to clustering, or 
* Second-order hypothesis: Polling stations "attract" one another.

The **first-order hypothesis** seems more feasible here - schools, parks, and community centers are often voting centers, and maybe those are clustered in certain areas of high income in DC (for example). 

So, as in class, I will seek to analyze the first-order characteristics of this pattern. I'll seek to estimate an intensity function from these points using the same packages as in the homework, such as 'spatstat' and its 'density.ppp()' function. 

Because the voting locations are all around DC and the DC Board of Elections governs the voting for the whole district, the observation window shall be the entire District of Columbia. 

I've started with the base code also provided in the homework - thank you Professor!

```{r}
#| label: observation-window
dc_geom_url <- "https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/dc_window.gpkg"
dc_sfc <- sf::st_read(dc_geom_url) 
  
if (!all(is.null(dc_sfc))) {
  dc_sfc |> sf::st_as_sf() |> ggplot() +
    geom_sf() +
    theme_classic()
} 
```


### Forming the ppp for Future Analysis

Here, I'll work through some of the transformations required to put the data into a ppp and displaying the information using ggplot, as in the homework.

```{r}
#| label: forming-ppp
poll_sf <- st_transform(sf_data_projected, 3857)
dc_sfc <- st_transform(dc_sfc, 3857)

poll_ppp <- as.ppp(st_coordinates(poll_sf), W = st_bbox(dc_sfc))

if (!all(is.null(poll_ppp))) {
  poll_ppp |> sf::st_as_sf() |> ggplot() +
    geom_sf() +
    theme_classic()
} 
```


### Plotting Intensity Functions

Now, as in the homework, I'll use different bandwidth parameters to estimate the density functinons with greater and lesser confidence. The following are the three different estimates:

1. `poll_lambda_default`: This uses the default bandwidth. 
2. `poll_lambda_hiconf`: This uses sigma=1000, signifying high confidence that the existing polling locations will mirror new polling locations produced here. 
3. `poll_lambda_lowconf`: This uses sigma=5000, signifying low confidence that the existing polling locations will mirror new polling locations produced here (i.e., that they will not mirror each other). 


```{r}
#| label: density-plots
poll_est_default <- density(poll_ppp) # Replace with default intensity function estimate
poll_est_hiconf <- density(poll_ppp, sigma = 1000) # Replace with sigma=1000 intensity function estimate
poll_est_lowconf <- density(poll_ppp, sigma = 5000) # Replace with sigma=5000 intensity function estimate

if (!all(is.null(poll_est_default)) & !all(is.null(poll_est_hiconf)) & !all(is.null(poll_est_lowconf))) {
  par(mfrow=c(1,3), mar=c(0,0,2,1))
  plot(poll_est_default)
  contour(poll_est_default, add=TRUE)
  plot(poll_est_hiconf)
  contour(poll_est_hiconf, add=TRUE)
  plot(poll_est_lowconf)
  contour(poll_est_lowconf, add=TRUE)
} 
```

With this intensity function now visualized for the three different confidence levels, we can now use both descriptive and normative terms to describe the locations of polling. It seems as though there are small, additional gaps in polling locations that could be addressed with policy changes or additional locations. However, overall, the voting locations in DC seem generally equitable and there are no gaping holes that cannot be accounted for.

As in the midterm, I'll now overlay the polling location points onto the Default map to see how those points appear.

```{r}
library(stars)
pop_stars <- poll_est_default |> stars::st_as_stars()
poll_points_sf <- poll_ppp |> sf::st_as_sf() |> filter(label == "point")
poll_points_sf |> ggplot() +
  stars::geom_stars(data=pop_stars) +
  geom_sf() +
  theme_classic() +
  scale_fill_viridis_c(option="C", na.value="transparent")
```

This is a really helpful visualization, which can help us clarify our first-order hypothesis. It appears as though areas with parks, green areas, or generally less infrastructure have less voting locations. This makes sense, as these locations generally also have less people permanently living in them!

## Application to Policy

Now, let's take this visual and do at least a visual comparision of the population of DC, [taken from this link from the DC Policy Center](https://www.dcpolicycenter.org/publications/regional-population-density-since-1970/){target='_blank'}:

```{r pressure, echo=FALSE, fig.cap="A caption", out.width = '70%'}
knitr::include_graphics("PopulationDensity.png")
```

Wow! We see a near-perfect map between polling locations and DC population (from 2010). The population centers also reflect the "holes" noted above that can be explained with regional knowledge. 

## Monte Carlo Simulation

Now that we have done this initial visualization and have narrowed down our hypothesis, I'll now do some Monte Carlo simulations to see if my hypthesis holds. I'll begin by running a single simulation.

```{r}
#| label: monte-carlo-sim-1
poll_sim <- function() {
  prot_sim <- spatstat.random::rpoint(
    n = 75,
    f = poll_est_default
  )
  return(prot_sim)
}
poll_sim_ppp <- poll_sim()
plot(poll_sim_ppp)
```

With this information, and with the population centers near-ish to the White House, I'm going to conduct a separate hypothesis test for the rest of the Monte Carlo simulatoins (which is full of proxy variables, I am definitely aware!): Do polling locations center around the White House?

### Establishing White House Coords

Below, I initialize the White House coords and do a quick visualization:

```{r}
center_lat = 38.8977
center_lon = -77.0365

whitehouse_df <- tibble::tribble(
  ~lat, ~lon, ~Type,
  center_lat, center_lon, "WhiteHouse"
)

whitehouse_sf <- sf::st_as_sf(whitehouse_df, coords = c("lon", "lat"), crs=4326)

mapview(whitehouse_sf)
```

Looks great. Now, let's view the White House AND the polling locations in DC:

```{r}
WhiteHouseMap <- mapview(whitehouse_sf)

WhiteHouseMap + DC_Voting + DC_Map
```

### Doing the Monte Carlo Simulation

Now, I'll compute the distances between the polling points and the White House.

```{r}
#! label: setting-up-monte
coords <- st_coordinates(sf_data)
window <- owin(xrange = range(coords[, 1]), yrange = range(coords[, 2]))
p <- ppp(x = coords[, 1], y = coords[, 2], window = window)

white_house_coords <- st_coordinates(whitehouse_sf)[1, ]
distances <- sqrt((coords[, 1] - white_house_coords[1])^2 + (coords[, 2] - white_house_coords[2])^2)

n_simulations <- 999
simulated_distances <- numeric(n_simulations)
simulation_results <- data.frame(simulation = 1:n_simulations, distance = NA, classification = NA)
```

That was to set up the Monte Carlo simulation. Now, I'll actually implement the 999 simulations, which will determine if the distances are low, medium, or high away from the White House.

```{r}
#! label: doing-monte
for (i in 1:n_simulations) {
  simulated_white_house <- c(runif(1, min = window$xrange[1], max = window$xrange[2]),
                             runif(1, min = window$yrange[1], max = window$yrange[2]))
  temp_distances <- sqrt((coords[, 1] - simulated_white_house[1])^2 + (coords[, 2] - simulated_white_house[2])^2)
  simulated_distances[i] <- mean(temp_distances)
  if (simulated_distances[i] < quantile(simulated_distances, 0.33)) {
    simulation_results$classification[i] <- "low"
  } else if (simulated_distances[i] < quantile(simulated_distances, 0.66)) {
    simulation_results$classification[i] <- "medium"
  } else {
    simulation_results$classification[i] <- "high"
  }
  simulation_results$distance[i] <- simulated_distances[i]
}

observed_mean_distance <- mean(distances)
percentile <- mean(simulated_distances < observed_mean_distance)

if (percentile < 0.33) {
  classification <- "low"
} else if (percentile < 0.66) {
  classification <- "medium"
} else {
  classification <- "high"
}

print(observed_mean_distance)
print(classification)
print(head(simulation_results, 20))
```

Very interesting results. It looks like here that the average distance from a polling location to the White House is "low", or what I've chosen here as within the 33rd percentile from the White House in these simulations. This makes sense to me - the voting centers are located in centers of population, and the White House certainly is in the population center as shown above! This seems to be more coincidence than causal, but it was an interesting application of Monte Carlo simulations here.

## Conclusion and Future Analysis

Overall, it appears that voting locations are clustered around population centers (and the White House). This makes sense, as with more people in one area, you need more voting locations! The "holes" in the voting centers **tend** to be in parks or other non-accessible areas like military bases, but there is certainly room for future analysis there.

This makes sense with the likely intended policy outcomes of DC. Access to voting is a crucial part of democracy, and so having a higher number of voting locations in higher population areas seems like a good policy choice for DC election planners.

### Steps for Further Exploration

In order to refine my conclusion from the section above, I would propose a number of things:
* Use population, racial, or other data to find other correlations between voting locations and demographics in DC.
* Use an "infrastructure" map of schools, libraries, and other public locations to see if any area is under-utilizing those locations for polling.
* Get data on polling locations with the longest lines (I'm not sure this data exists, so I would put this in the Library of Missing Datasets!) in DC and compare that to the map of current polling locations and infrastructure to see if there is a way to alleviate those lines.

These three steps could help me further analyze my hypothesis and push the boundaries of deciding where polling places should be to help the folks in DC get their ballots to the ballot box (while spending the least amount of time in line as well). This would be a win win!

Thank you so much for a great semester, Professor, and have a great break!





